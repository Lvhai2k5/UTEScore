package vn.ute.utescore.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class Guest_SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            // üö™ 1Ô∏è‚É£ C·∫§P QUY·ªÄN TRUY C·∫¨P
            .authorizeHttpRequests(auth -> auth
                .requestMatchers(
                    "/", "/home", "/register", "/login",
                    "/pitches/**", "/news/**", "/promotions/**",
                    "/css/**", "/js/**", "/images/**", "/api/**"
                ).permitAll() // ‚úÖ Cho ph√©p kh√°ch truy c·∫≠p
                .requestMatchers("/customer/**", "/employee/**", "/admin/**", "/book/**", "/profile/**")
                .permitAll() // ‚ö†Ô∏è Cho ph√©p t·∫°m th·ªùi ƒë·ªÉ test (kh√¥ng ch·∫∑n login)
                .anyRequest().permitAll()
            )

            // üîí 2Ô∏è‚É£ T·∫ÆT TO√ÄN B·ªò C∆† CH·∫æ M·∫∂C ƒê·ªäNH
            .csrf(csrf -> csrf.disable())        // Kh√¥ng c·∫ßn CSRF khi d√πng form th·ªß c√¥ng
            .formLogin(form -> form.disable())   // Kh√¥ng d√πng form login m·∫∑c ƒë·ªãnh
            .logout(logout -> logout.disable())  // Kh√¥ng d√πng logout m·∫∑c ƒë·ªãnh
            .httpBasic(httpBasic -> httpBasic.disable()); // T·∫Øt HTTP Basic Auth (user/password popup)

        return http.build();
    }

    // üîê 3Ô∏è‚É£ M√£ ho√° m·∫≠t kh·∫©u b·∫±ng BCrypt
    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }
}
