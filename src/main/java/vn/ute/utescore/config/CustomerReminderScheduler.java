package vn.ute.utescore.config;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import vn.ute.utescore.service.CustomerEmailService;

@Component
@EnableScheduling
public class CustomerReminderScheduler {

    // ‚úÖ Thay th·∫ø cho @Slf4j
    private static final Logger log = LoggerFactory.getLogger(CustomerReminderScheduler.class);

    private final CustomerEmailService emailService;

    // ‚úÖ Constructor thay cho @RequiredArgsConstructor
    public CustomerReminderScheduler(CustomerEmailService emailService) {
        this.emailService = emailService;
    }

    /**
     * üïê T√°c v·ª• t·ª± ƒë·ªông ch·∫°y m·ªói ph√∫t ƒë·ªÉ g·ª≠i email nh·∫Øc l·ªãch s√¢n
     * Cron: 0 * * * * *  ‚Üí ch·∫°y m·ªói ph√∫t, theo m√∫i gi·ªù Vi·ªát Nam
     */
    @Scheduled(cron = "0 * * * * *", zone = "Asia/Ho_Chi_Minh")
    public void checkAndSendReminders() {
        try {
            emailService.sendUpcomingBookingReminders();
            log.info("‚úÖ Job nh·∫Øc s√¢n ƒë√£ ch·∫°y th√†nh c√¥ng l√∫c {}", java.time.LocalTime.now());
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi ch·∫°y job nh·∫Øc s√¢n: {}", e.getMessage(), e);
        }
    }
}
