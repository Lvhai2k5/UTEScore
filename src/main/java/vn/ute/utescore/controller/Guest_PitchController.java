package vn.ute.utescore.controller;

import vn.ute.utescore.dto.Guest_PitchDTO;
import vn.ute.utescore.service.Guest_PitchService;
import vn.ute.utescore.service.Guest_ReviewService;
import vn.ute.utescore.dto.Guest_ReviewDTO;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

import java.util.List;

@Controller
public class Guest_PitchController {

    private static final Logger logger = LoggerFactory.getLogger(Guest_PitchController.class);

    @Autowired
    private Guest_PitchService pitchService;   // ‚úÖ Inject interface, kh√¥ng d√πng impl

    @Autowired
    private Guest_ReviewService reviewService; // ‚úÖ Inject interface

    /**
     * üìÑ Hi·ªÉn th·ªã danh s√°ch s√¢n b√≥ng
     */
    @GetMapping("/pitches")
    public String showPitches(Model model) {
        logger.info("‚öôÔ∏è PitchController.showPitches() ƒë∆∞·ª£c g·ªçi!");

        // L·∫•y danh s√°ch s√¢n ho·∫°t ƒë·ªông
        List<Guest_PitchDTO> pitches = pitchService.getAllActive();
        logger.info("üéØ T·ªïng s·ªë s√¢n ƒëang ho·∫°t ƒë·ªông: {}", pitches.size());

        // L·∫•y review m·∫´u (n·∫øu mu·ªën hi·ªÉn th·ªã ·ªü giao di·ªán)
        List<Guest_ReviewDTO> reviews = reviewService.getSampleReviews();

        // ƒê∆∞a d·ªØ li·ªáu ra view
        model.addAttribute("pitches", pitches);
        model.addAttribute("reviews", reviews);

        return "guest/pitches"; // Tr·∫£ v·ªÅ template pitches.html
    }
}
